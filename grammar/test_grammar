

qwert = /testing/msix
my_fun = s/\basdf\b/qwer/g

tokens {}

list context root {
	switch {
		'context', 'root' {
			return
		}
		'asdf' {
			push undef
			push $0
			push 'asdf'
			push !test_more
			push !test_more->[]
		}
		'qwerty', /\d+/i {
			$_{'asdf'} = 'qwerty'
			$_{'qwerty'}[] = 'zxcv'
			$_{'zxvc'}{'key'} = 'uiop'
			push []
			push {}
		}
		default {
			warn 'default path'
			return
		}
	}
}

list context test_more {
	switch {
		'a' {
			match 'b', 'c', $qwert
		}
		'b' {
			push {
				'a' => '15'
				'b' => $0
				'line_number' => $0{line_number}
				'line_offset' => $0{line_offset}
				'nested_hash' => {
					'nested' => 'true'
					'c' => '35'
				}
			}
			push !root->{
				'type' => 'nested'
			}
			$_ = {
				'a' => $0
				'b' => !root->'respawned'
			}
			push &direct_function_call
		}
	}
}

list context test_if {
	if 'a' {
		push 'a'
	} elsif 'b' {
		push 'b'
	} else {
		push '-'
	}
}


list context test_switch {
	switch {
		'asdf' {
			push '5'
		}
		default {
			push '0'
		}
	}
}


item context test_replace {
	match /\w++/
	$_ = s/([a-z])/!$1/g->$0
	$_ = $my_fun->$0

	$_ = $_{'asdf'}
}


sub native_perl_function {{
	my ($self) = @_;
	print 'hello world!'
}}
